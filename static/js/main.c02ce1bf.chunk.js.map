{"version":3,"sources":["components/Input/index.js","components/Button/index.js","components/Card/index.js","components/ProductAdd/index.js","components/Table/index.js","components/Cart/index.js","components/Description/index.js","components/Main/index.js","App.js","serviceWorker.js","index.js"],"names":["Input","props","label","name","inputClass","type","value","placeholder","onChange","width","restProps","Object","objectWithoutProperties","react_default","a","createElement","className","htmlFor","assign","id","cn","style","height","Button","text","buttonClass","onClick","Card","title","children","ProductAdd","addToCart","_useState","useState","_useState2","slicedToArray","nameInputValue","setNameInputValue","_useState3","_useState4","priceInputValue","setPriceInputValue","src_components_Card","onSubmit","e","preventDefault","uniqueId","price","src_components_Input","target","required","Number","max","min","src_components_Button","TD","dataTest","data-test","Table","items","cartEmptyMessage","length","Table_TD","map","product","index","key","concat","discountPrice","Cart","productsList","updateDiscount","discountInputValue","setDiscountValue","src_components_Table","disabled","Description","href","Main","discount","setDiscount","total","setTotal","_useState5","_useState6","updateProductsList","getDiscountPricesList","newProductsList","newTotal","newDiscount","discountBase","listWithDiscounts","objectSpread","Math","floor","discountRest","reduce","acc","_ref","iMax","_ref2","src_components_ProductAdd","toConsumableArray","src_components_Cart","src_components_Description","App","src_components_Main","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c02ce1bf.chunk.js","sourcesContent":["import React from 'react';\nimport cn from 'classnames';\nimport './index.css';\n\nconst Input = (props) => {\n  const { label, name, inputClass, type, value, placeholder, onChange, width, ...restProps } = props;\n  return (\n    <div className='input-wrapper'>\n      <label htmlFor='input' className='input-label'>\n        {label}\n      </label>\n      <input\n        {...restProps}\n        id='input'\n        className={cn('input-field', inputClass)}\n        type={type}\n        style={{ width, height: '22px' }}\n        name={name}\n        value={value}\n        placeholder={placeholder}\n        onChange={onChange}\n      />\n    </div>\n  );\n};\n\nexport default Input;\n","import React from 'react';\nimport cn from 'classnames';\nimport './index.css';\n\nconst Button = (props) => {\n  const { name, type, text, buttonClass, onClick, ...restProps } = props;\n  return (\n    <div className='button-wrapper'>\n      <button\n        {...restProps}\n        name={name}\n        type={type}\n        onClick={onClick}\n        className={cn('button', buttonClass)}\n      >\n        {text}\n      </button>\n    </div>\n  );\n};\n\nexport default Button;\n","import React from 'react';\nimport './index.css';\n\nconst Card = props => {\n  const { title, children } = props;\n  return (\n    <div className='card'>\n      <h2 className='title'>{title}</h2>\n      {children}\n    </div>\n  );\n};\n\nexport default Card;\n","import React, { useState } from 'react';\nimport { uniqueId } from 'lodash';\n\nimport './index.css';\nimport Input from '../Input';\nimport Button from '../Button';\nimport Card from '../Card';\n\nconst ProductAdd = (props) => {\n  const { addToCart } = props;\n  const [nameInputValue, setNameInputValue] = useState('');\n  const [priceInputValue, setPriceInputValue] = useState(0);\n\n  const handlePriceInput = (e) => {\n    const { value } = e.target;\n    setPriceInputValue(Number(value));\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (!priceInputValue) {\n      return;\n    }\n    addToCart({ id: uniqueId(), name: nameInputValue, price: priceInputValue });\n    setNameInputValue('');\n    setPriceInputValue(0);\n  };\n\n  return (\n    <Card title='Добавить продукт'>\n      <form className='product-add-form' onSubmit={handleSubmit}>\n        <Input\n          label='Продукт'\n          name='product-name'\n          inputClass='product-name-input'\n          type='text'\n          placeholder='Название продукта'\n          value={nameInputValue}\n          onChange={e => setNameInputValue(e.target.value)}\n          width='120px'\n          required\n        />\n        <Input\n          label='Цена'\n          name='product-price'\n          inputClass='product-price-input'\n          type='number'\n          value={priceInputValue}\n          onChange={handlePriceInput}\n          width='50px'\n          max={1000000}\n          min={0}\n          required\n        />\n        <Button\n          name='add-product'\n          type='submit'\n          text='Добавить'\n          buttonClass='add-product'\n        />\n      </form>\n    </Card>\n  );\n};\n\nexport default ProductAdd;\n","import React from 'react';\nimport './index.css';\n\nconst TD = (props) => {\n  const { children, \"data-test\": dataTest } = props;\n  return (\n    <td\n      className=\"table-cell\"\n      data-test={dataTest}\n    >\n      {children}\n    </td>\n  );\n};\n\nconst Table = props => {\n  const { items, cartEmptyMessage } = props;\n  return (\n    <div className=\"table-wrapper\">\n      {items.length ? (\n        <table className=\"table\">\n          <thead className='table-header'>\n            <tr>\n              <TD>Продукт</TD>\n              <TD>Цена</TD>\n              <TD>Цена со скидкой</TD>\n            </tr>\n          </thead>\n          <tbody>\n            {items.map((product, index) => (\n              <tr\n                key={product.id}\n                className={index % 2 === 0 ? 'evenrow' : 'oddrow'}\n                data-test={`row-${index}`}\n              >\n                <TD>{product.name}</TD>\n                <TD>{product.price}</TD>\n                <TD data-test=\"discount-price\">{product.discountPrice}</TD>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      ) : (\n        <p className='message'>{cartEmptyMessage}</p>\n      )}\n    </div>\n  );\n};\n\nexport default Table;\n","import React, { useState } from 'react';\nimport './index.css';\nimport Input from '../Input';\nimport Button from '../Button';\nimport Card from '../Card';\nimport Table from '../Table';\n\nconst Cart = (props) => {\n  const { productsList, updateDiscount } = props;\n  const [discountInputValue, setDiscountValue] = useState(0);\n\n  const handleDiscountInput = (e) => {\n    const { value } = e.target;\n    setDiscountValue(Number(value));\n  };\n\n  const handleDiscountUpdateButton = (e) => {\n    e.preventDefault();\n    updateDiscount(discountInputValue);\n  };\n\n  return (\n    <Card title='Корзина'>\n      <Table items={productsList} cartEmptyMessage='Ваша корзина пуста' />\n      <form className='discount-form' onSubmit={handleDiscountUpdateButton}>\n        <span>Скидка</span>\n        <Input\n          name='discount'\n          inputClass='discount-input'\n          type='number'\n          value={discountInputValue}\n          onChange={handleDiscountInput}\n          width='30px'\n          max={99}\n          min={0}\n        />\n        <span>рублей</span>\n        <Button\n          disabled={!productsList || productsList.length === 0}\n          name='update-discount'\n          type='submit'\n          text='Применить'\n          buttonClass='set-discount'\n        />\n      </form>\n    </Card>\n  );\n};\n\nexport default Cart;\n","import React from 'react';\nimport './index.css';\nimport Card from '../Card';\n\nconst Description = () => {\n  return (\n    <Card title='Подсказки'>\n      <p>\n        Скидка для каждой позиции рассчитывается пропорционально цене товара.\n        Скидка всегда в рублях без копеек.\n        Сумма скидок по каждому товару всегда точно равна общей сумме.\n        При округлении остаток суммы применяется к самому дорогому товару в корзине.\n      </p>\n      <p>\n        Исходный код приложения находится на <a href='https://github.com/UsmanAAV/simple-cart'>гитхабе</a>\n      </p>\n    </Card>\n  );\n};\n\nexport default Description;\n","import React, { useState } from 'react';\nimport './index.css';\nimport ProductAdd from '../ProductAdd';\nimport Cart from '../Cart';\nimport Description from '../Description';\n\nconst Main = () => {\n  const [discount, setDiscount] = useState(0);\n  const [total, setTotal] = useState(0);\n  const [productsList, updateProductsList] = useState([]);\n\n  const getDiscountPricesList = (newProductsList, newTotal, newDiscount) => {\n    const discountBase = newDiscount / newTotal;\n    const listWithDiscounts = newProductsList.map(product => ({\n      ...product,\n      discountPrice: product.price - Math.floor(product.price * discountBase),\n    }));\n    const discountRest = listWithDiscounts.reduce((acc, { price, discountPrice }) => acc + (price - discountPrice), 0);\n    if (discountRest === newDiscount) {\n      return listWithDiscounts;\n    }\n    const { iMax } = listWithDiscounts.reduce((acc, { price }, index) => price > acc.max ? { iMax: index, max: price } : acc, { iMax: 0, max: 0 });\n    const result = listWithDiscounts\n      .map((product, index) => (\n        iMax === index\n        ? { ...product, discountPrice: product.discountPrice - (newDiscount - discountRest) }\n        : product\n      ));\n    return result;\n  };\n\n  const addToCart = (product) => {\n    setTotal(total + product.price);\n    updateProductsList(getDiscountPricesList([...productsList, product], total + product.price, discount));\n  };\n\n  const updateDiscount = (newDiscount) => {\n    setDiscount(newDiscount);\n    updateProductsList(getDiscountPricesList(productsList, total, newDiscount));\n  };\n\n  return (\n    <main className='main'>\n      <ProductAdd addToCart={addToCart} />\n      <Cart\n        productsList={productsList}\n        updateDiscount={updateDiscount}\n      />\n      <Description title='Подсказки' />\n    </main>\n  );\n};\n\nexport default Main;\n","import React from 'react';\nimport './App.css';\nimport Main from './components/Main';\n\nconst App = () => {\n  return (\n    <Main />\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}